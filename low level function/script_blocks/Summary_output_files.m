%% Summary analysis output

writetable(ICsummary,[PS.outDest, '\','ephys_features_', date,'.csv'], 'WriteRowNames',true)
QCcellWise
writetable(QCcellWise,[PS.outDest, '\','CellWideQC_', date,'.csv'], 'WriteRowNames',true)

ICsummary = rmmissing(ICsummary,'DataVariables',{'htTP_LP','tau'}); %prune cells without spikes and time constant

%% QC parameter for each cell

MaxSweepNr = max(QC_removalsPerTag.SweepsTotal);
sweepBinary = array2table(NaN(height(QC_removalsPerTag),MaxSweepNr));
ColumnNames = regexp(cellstr(sprintf('Sweep_%d ',0:MaxSweepNr-1)),' ','split');
sweepBinary.Properties.VariableNames  = ColumnNames{:};
sweepBinary.Properties.RowNames  = QC_removalsPerTag.Properties.RowNames;

writetable(sweepBinary, fullfile(PS.outDest, ['binary_selection_',date,'.csv']), ...
    'WriteRowNames',true)  

%% QC logic sweeps per class matrix 

writetable(QC_removalsPerTag, [...
    PS.outDest,'\','QC_sweeps_per_tag_matrix_',date,'.csv'], 'WriteRowNames',true);  
%% Website: Look up table,

% for i = 1:length(ICsummary.Properties.RowNames)
%    ID_new{i,1} =  NHP_ID_conversion(ICsummary.Properties.RowNames{i});
%    SubjID{i,1} =  NHP_SubjID_conversion(ICsummary.Properties.RowNames{i});
% end
% T= table(ID_new, ICsummary.Properties.RowNames);
% T.Properties.VariableNames{2} = 'ID_old';
% writetable(T,  fullfile(PS.outDest, ['ID_lookup_',date,'.csv']) );   
% 
% %% Website:Box1
% 
% val = [ID_new ICsummary.Species ICsummary.Sex ICsummary.brainOrigin ...
%         SubjID ICsummary.dendriticType ICsummary.SomaLayerLoc ...
%            ICsummary.Properties.RowNames]; 
% 
% colName = {'cellID' 'Species' 'Sex' ...
%      'Cortical area' 'Subject ID' 'Dendrite type' 'Cortical layer' ...
%      'internalID'};
% 
% T = cell2table(val, 'VariableNames', colName);
% 
% writetable(T,[PS.outDest, '\','box1','.csv'])
% 
% %% Website:Box2
% val =[ICsummary.widTP_LP ICsummary.htTP_LP ...
%     ICsummary.Vrest ICsummary.Rheo  ICsummary.RinHD ICsummary.tau ...
%     ICsummary.maxRt ICsummary.medInstaRt];
% 
% colName = {'cellID' 'AP halfwidth' 'AP amplitude' ...
%     'Resting potential' 'Rheobase' 'Resistance' 'Time Constant' ...
%     'Maximum firing rate' 'Median instantanous frequency' 'internalID'};
% 
% T = array2table(NaN(size(val)+ [0 2]), 'VariableNames', colName);
% T.cellID = ID_new;
% T.internalID = ICsummary.Properties.RowNames;
% T(:,2:9) = array2table(val);
% 
% writetable(T,[PS.outDest, '\','box2_ephys','.csv'])

%% procedure doc file
rowNames = {'Standard';'Cell-wise: initial R_a';'Cell-wise: initial R_a fract'; ...
    'Cell-wise: electrode drift'; 'Sweep-wise: bridge balance abs'; ...
    'Sweep-wise: bridge balance fract'; 'Sweep-wise: max I hold'; ...
    'Sweep-wise: maximum RMP'; ...
    'Sweep-wise: maximum deviation from start RMP'
    'Sweep-wise: pre post voltage stability'
    'Sweep-wise: st RMSE'; 'Sweep-wise: lt RMSE'; ...
    'Sweep-wise: LP averaging window pre stim'; ...
    'Sweep-wise: SP averaging window pre stim'; ...
    'Sweep-wise: start window post from stim onset LP'; ...  
    'Sweep-wise: start window post from stim onset stim SP'; ...
    'Sweep-wise: min Frac good Sp'; ...
    'Spike-wise: min SpAmp narrow'; 'Spike-wise: min SpAmp broad'; ...
    'Spike-wise: max threshold'; 'No Suprathreshold';...
    'time'; 'path'; 'computer'; 'Matlab'  ... 
    };
T= array2table([["Current Run", "Allen White Paper"];...
    [PS.cutoffInitRa, 20];...
    [PS.factorRelaRa, "0.2(human);0.15(mouse)"]; ...
    ["not implemented", "1 mV for every 10 min after start WC"]; ...
    [string(PS.bridge_balance) , "20"]; ...
    [PS.factorRelaRa , "0.2(human);0.15(mouse)"]; ...
    ["100 (abs)", "100 (abs)"]; ...
    [PS.maxCellBasLinPot, "not implemented"]; ...
    [PS.BwSweepMax, "not implemented"]; ...
    [PS.maxDiffBwBeginEnd, "1"]; ...
    [PS.RMSEst, "0.07"]; ...
    [PS.RMSElt, "0.5"]; ...
    [PS.LPqc_samplWind , "-"]; ...
    [PS.SPqc_samplWind , "-"]; ...
    [PS.LPqc_recovTime + 1000, "-"]; ...
    [PS.SPqc_recovTime + 3, "-"]; ...
    [PS.minGoodSpFra, "not implemented"]; ...
    [PS.minDiffThreshold2PeakN, "not implemented"]; ...
    [PS.minDiffThreshold2PeakB, "not implemented"]; ...
    [PS.maxThreshold , "not implemented"]; ...    
    [PS.noSupra , "not implemented"]; ...  
    [string(datestr(now,'HH:MM:SS')), "-"]; ... 
    [mainFolder , "-"]; ... 
    [computer, "-"]; ... 
    [version, "-"]]...
     , 'RowNames', rowNames...
  );

writetable(T, [PS.outDest,'\','procedure_doc_', date,'.csv'],'WriteRowNames',true, ...
    'WriteVariableNames', false);