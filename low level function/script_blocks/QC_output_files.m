%ID_new = IC.ID_new;
ID = IC.ID;
IC.tp_membrR = zeros(length(IC.ID),1);

%QC parameter
access = IC.access_resistance;
Ra_rela_cut = IC.tp_membrR*params.factorRelaRa;
tp_Rm = IC.tp_membrR;
preqc_Rm = IC.resistance_preqc;

for n = 1:length(IC.ID)
qc_bridgebalance(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.bridg_bala(n,1:qc.LP.nr_sweeps(n,1)), ...
      qc.SP.bridg_bala(n,1:qc.SP.nr_sweeps(n,1))];
qc_holding_current(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.I_hold(n,1:qc.LP.nr_sweeps(n,1)), ...
      qc.SP.I_hold(n,1:qc.SP.nr_sweeps(n,1))];
qc_restVdiffpreNpost(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.restVdiffpreNpost(n,1:qc.LP.nr_sweeps(n,1)), ...
      qc.SP.restVdiffpreNpost(n,1:qc.SP.nr_sweeps(n,1))];
qc_rmse_pre_lt(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.rmse_pre_lt(n,1:qc.LP.nr_sweeps(n,1)), ...
      qc.SP.rmse_pre_lt(1:qc.SP.nr_sweeps(n,1))]; 
qc_rmse_post_lt(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.rmse_post_lt(n,1:qc.LP.nr_sweeps(n,1)), ...
      qc.SP.rmse_post_lt(n,1:qc.SP.nr_sweeps(n,1))];  
end

T1 = table(ID,access, tp_Rm,preqc_Rm , Ra_rela_cut);
T2 = table(ID,qc_bridgebalance);
T3 = table(ID,qc_holding_current);
T4 = table(ID,qc_restVdiffpreNpost);
T5 = table(ID,qc_rmse_pre_lt);
T6 = table(ID,qc_rmse_post_lt);

writetable(T1,[save_path,'qc parameters ',date,'.xlsx'], ...
    'Sheet', 'Initial Access','WriteRowNames',true)
writetable(T2,[save_path,'qc parameters ',date,'.xlsx'], ...
    'Sheet', 'Bridge Balance','WriteRowNames',true)  
writetable(T3,[save_path,'qc parameters ',date,'.xlsx'], ...
    'Sheet', 'holding current','WriteRowNames',true)
writetable(T4,[save_path,'qc parameters ',date,'.xlsx'], ...
     'Sheet', 'VoltageDiffpreNpost','WriteRowNames',true)
writetable(T5,[save_path,'qc parameters ',date,'.xlsx'], ...
     'Sheet', 'lt RMSE pre','WriteRowNames',true)  
writetable(T6,[save_path,'qc parameters ',date,'.xlsx'], ...
     'Sheet', 'lt RMSE post','WriteRowNames',true)

 
%ID_new, is missing
% binary table for sweeps	
T= table(ID, ... 
         qc.sweepBinary);
   writetable(T, [save_path,'binary_selection_',date,'.csv'] )   
   
% table of sweep names for website

for n = 1:length(IC.ID) 
sweep(n,1:qc.LP.nr_sweeps(n,1)+qc.SP.nr_sweeps(n,1)) = ...
    [qc.LP.sweep_labels(n,1:qc.LP.nr_sweeps(n,1)), ...
    qc.SP.sweep_labels(n,1:qc.SP.nr_sweeps(n,1))];
end
T= table(ID, ...%ID_new, 
sweep);
   writetable(T, [save_path,'sweep_labels_selection_',date,'.csv'] )   
 
% QC logic sweeps per class matrix 
qc_logic_mat.oldID = string(qc_logic_mat.oldID);                          % changes variable format from double to string
qc_logic_mat{:,1} = cellstr(IC.ID(:,:));    
writetable(qc_logic_mat, [save_path,'QC_sweeps_per_tag_matrix_',date,'.csv'] );

% QC class matrix
cells = [cellstr(ID), qc.class_mat];
save([save_path,'QC_class_matrix_', date],'cells') 

%ID look up table    
varNames = {'new cellID','old cellID'};
T= table(IC.ID_new, IC.ID, 'VariableNames',varNames);
writetable(T, [save_path,'ID_lookup','.csv'] );   

% procedure doc file
rowNames = {'Standard';'Cell-wise: initial R_a';'Cell-wise: initial R_a fract'; ...
    'Cell-wise: electrode drift'; 'Sweep-wise: bridge balance abs'; ...
    'Sweep-wise: bridge balance fract'; 'Sweep-wise: max I hold'; ...
    'Sweep-wise: maximum RMP'; ...
    'Sweep-wise: maximum deviation from start RMP'
    'Sweep-wise: pre post voltage stability'
    'Sweep-wise: st RMSE'; 'Sweep-wise: lt RMSE'; ...
    'Sweep-wise: LP averaging window pre stim'; ...
    'Sweep-wise: SP averaging window pre stim'; ...
    'Sweep-wise: start window post from stim onset LP'; ...  
    'Sweep-wise: start window post from stim onset stim SP'; ...
    'Sweep-wise: min Frac good Sp'; ...
    'Spike-wise: min SpAmp narrow'; 'Spike-wise: min SpAmp broad'; ...
    'Spike-wise: max threshold'; 'time'; 'path'; 'computer'; 'Matlab'   
    };
T= array2table([["Current Run", "Allen White Paper"];...
    [params.cutoffInitRa, 20];...
    [params.factorRelaRa, "0.2(human);0.15(mouse)"]; ...
    ["not implemented", "1 mV for every 10 min after start WC"]; ...
    [string(params.bridge_balance) , "20"]; ...
    [params.factorRelaRa , "0.2(human);0.15(mouse)"]; ...
    ["100 (abs)", "100 (abs)"]; ...
    [params.maximumRestingPot , "not implemented"]; ...
    [params.BwSweepMax, "not implemented"]; ...
    [params.maxDiffBwBeginEnd, "1"]; ...
    [params.RMSEst, "0.07"]; ...
    [params.RMSElt, "0.5"]; ...
    [params.LPqc_samplWind , "-"]; ...
    [params.SPqc_samplWind , "-"]; ...
    [params.LPqc_recovTime + 1000, "-"]; ...
    [params.SPqc_recovTime + 3, "-"]; ...
    [params.minGoodSpFra, "not implemented"]; ...
    [params.minDiffThreshold2PeakN, "not implemented"]; ...
    [params.minDiffThreshold2PeakB, "not implemented"]; ...
    [params.maxThreshold , "not implemented"]; ...    
    [string(datestr(now,'HH:MM:SS')), "-"]; ... 
    [mainFolder , "-"]; ... 
    [computer, "-"]; ... 
    [version, "-"]]...
     , 'RowNames', rowNames...
  );

writetable(T, [save_path,'procedure_doc_', date,'.csv'],'WriteRowNames',true, ...
    'WriteVariableNames', false);   


        